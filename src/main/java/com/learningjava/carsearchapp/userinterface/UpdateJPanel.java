/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.learningjava.carsearchapp.userinterface;

import com.learningjava.carsearchapp.Utility;
import com.learningjava.carsearchapp.model.Car;
import com.learningjava.carsearchapp.model.Generator;
import com.learningjava.carsearchapp.model.VehicleFleet;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Date;
import javax.annotation.processing.Generated;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhavinbhatia
 */
public class UpdateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPanel
     */
    Car updateCar;
    VehicleFleet vehicleFleet;
    public UpdateJPanel(Car updateCar,VehicleFleet vehicleFleet) {
        initComponents();
        this.updateCar = updateCar;
        displayProfile ();
      
        
        this.setVehicleFleet(vehicleFleet);
        
    }
    
    public void setVehicleFleet(VehicleFleet vehicleFleet) {
        this.vehicleFleet = vehicleFleet;
        populateRecords();
    }
    
    public void setFleetOfCars(ArrayList<Car> cars) {
        this.vehicleFleet.setFleetOfCars(cars);
        populateRecords();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarList = new javax.swing.JTable();
        btnUpdateDetails = new javax.swing.JButton();
        btnEditDetails = new javax.swing.JButton();
        btnDeleteDetails = new javax.swing.JButton();
        lblMakeYear = new javax.swing.JLabel();
        lblSerialNumber = new javax.swing.JLabel();
        lblModelNumber = new javax.swing.JLabel();
        lblSeats = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblManufacturer = new javax.swing.JLabel();
        ChcMaintainance = new javax.swing.JCheckBox();
        ChcAvailable = new javax.swing.JCheckBox();
        txtCarType = new javax.swing.JTextField();
        txtManufacturer = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtMakeYear = new javax.swing.JTextField();
        txtSerialNumber = new javax.swing.JTextField();
        txtModelNo = new javax.swing.JTextField();
        txtNoOfSeats = new javax.swing.JTextField();
        generateButton = new javax.swing.JButton();
        txtLastUpdated = new javax.swing.JTextField();

        tblCarList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Type Of  Car", "Manufacturer", "City", "Total Seats", "Make Year", "Serail No.", "Model No.", "Maintainance Expired ", "Availibility"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCarList);

        btnUpdateDetails.setText("Update Details");
        btnUpdateDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDetailsActionPerformed(evt);
            }
        });

        btnEditDetails.setText("Edit Details");
        btnEditDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditDetailsActionPerformed(evt);
            }
        });

        btnDeleteDetails.setText("Delete Details");
        btnDeleteDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDetailsActionPerformed(evt);
            }
        });

        lblMakeYear.setText("Make Year");

        lblSerialNumber.setText("Serial Number:");

        lblModelNumber.setText("Model Number:");

        lblSeats.setText("Total Seats");

        lblType.setText("Car Type:");

        lblCity.setText("City");

        lblManufacturer.setText("Manufacturer");

        ChcMaintainance.setText("Maintainance Date ");

        ChcAvailable.setText("Available");
        ChcAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChcAvailableActionPerformed(evt);
            }
        });

        txtMakeYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMakeYearActionPerformed(evt);
            }
        });

        txtSerialNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialNumberActionPerformed(evt);
            }
        });

        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        txtLastUpdated.setEnabled(false);
        txtLastUpdated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastUpdatedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(ChcAvailable)
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblModelNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMakeYear, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSerialNumber, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(342, 342, 342)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMakeYear)
                            .addComponent(txtSerialNumber)
                            .addComponent(txtModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ChcMaintainance)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNoOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(613, 613, 613))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblManufacturer, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(lblType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCarType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(btnUpdateDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(btnEditDetails)
                        .addGap(103, 103, 103)
                        .addComponent(btnDeleteDetails)
                        .addGap(96, 96, 96)
                        .addComponent(generateButton)
                        .addGap(18, 18, 18)
                        .addComponent(txtLastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblCity, lblMakeYear, lblManufacturer, lblModelNumber, lblSeats, lblSerialNumber, lblType, txtCarType, txtCity, txtMakeYear, txtManufacturer, txtModelNo, txtNoOfSeats, txtSerialNumber});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDeleteDetails, btnEditDetails, generateButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditDetails)
                    .addComponent(btnDeleteDetails)
                    .addComponent(generateButton)
                    .addComponent(txtLastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblType)
                            .addComponent(txtCarType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblManufacturer)
                            .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMakeYear)
                            .addComponent(txtMakeYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSerialNumber)
                            .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModelNumber)
                            .addComponent(txtModelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeats)
                    .addComponent(txtNoOfSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChcAvailable)
                    .addComponent(ChcMaintainance, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btnUpdateDetails)
                .addGap(194, 194, 194))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblCity, lblMakeYear, lblManufacturer, lblModelNumber, lblSeats, lblSerialNumber, lblType, txtCarType, txtCity, txtMakeYear, txtManufacturer, txtModelNo, txtNoOfSeats, txtSerialNumber});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDeleteDetails, btnEditDetails, generateButton});

    }// </editor-fold>//GEN-END:initComponents

    private void txtMakeYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMakeYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMakeYearActionPerformed

    private void txtSerialNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialNumberActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // TODO add your handling code here:
        Generator generator = new Generator();
        ArrayList<Car> fleetOfCars = generator.generateCars(100);
       
        this.setFleetOfCars(fleetOfCars);
        
        Date date = new Date();
        
        String dateStr = Utility.dateToTimestampStr(date);
        
        txtLastUpdated.setEnabled(false);

        txtLastUpdated.setText("Last updated: " + dateStr);
    
    }//GEN-LAST:event_generateButtonActionPerformed

    private void btnEditDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditDetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCarList.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select the row");
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCarList.getModel();
        ArrayList<Car> cars =  this.vehicleFleet.getFleetOfCars();
        
        updateCar = cars.get(selectedRowIndex);
        txtCity.setText(updateCar.getCity());
        txtCarType.setText(updateCar.getType());
        txtMakeYear.setText( String.valueOf(updateCar.getMakeYear()));
        txtManufacturer.setText(updateCar.getManufacturer());
        txtModelNo.setText(updateCar.getModelNo());
        txtNoOfSeats.setText( String.valueOf(updateCar.getNoOfSeats()));
        txtSerialNumber.setText( String.valueOf(updateCar.getSerialNum()));
        ChcAvailable.setSelected(updateCar.isAvailable());
//                ChcAvailable.setEnabled(false);

        
        
    }//GEN-LAST:event_btnEditDetailsActionPerformed

    private void btnDeleteDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblCarList.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select the row");
        }
        
        DefaultTableModel model = (DefaultTableModel) tblCarList.getModel();
       
        
        
        ArrayList<Car> cars = vehicleFleet.getFleetOfCars();
        
        
        cars.remove(selectedRowIndex);
        

        JOptionPane.showMessageDialog(this, "Selected row deleted");
        populateRecords();
        
        
    }//GEN-LAST:event_btnDeleteDetailsActionPerformed

    private void btnUpdateDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDetailsActionPerformed
        // TODO add your handling code here:
        String type = txtCarType.getText();
        String city = txtCity.getText();
        String makeYrTxt = txtMakeYear.getText();
        String manufacturer = txtManufacturer.getText();
        String modelNo = txtModelNo.getText();
        String numSeatsTxt = txtNoOfSeats.getText();
        String serialNumTxt = txtSerialNumber.getText();
        
        if (!Car.validateNotNull(type, manufacturer, 
                makeYrTxt, numSeatsTxt, 
                serialNumTxt, modelNo, city)) {
            JOptionPane.showMessageDialog(this, 
                    "Please enter correct details, empty fields are not allowed.");
            return;
        }
        
        if (!Utility.isNum(makeYrTxt)) {
            JOptionPane.showMessageDialog(this, "Incorrect Details for Year");
            return;
        }
        if (!Utility.isNum(numSeatsTxt)) {
            JOptionPane.showMessageDialog(this, "Incorrect Details for seats");
            return;
        }
        if (!Utility.isNum(serialNumTxt)) {
            JOptionPane.showMessageDialog(this, "Incorrect Details for serial num");
            return;
        }
        if (serialNumTxt.length() < 4 || serialNumTxt.length() > 10) {
            JOptionPane.showMessageDialog(this, "Serial number looks incorrect.");
            return;
        }
        
        
        
        int makeYear = Integer.parseInt(makeYrTxt);
  
        int noOfSeats = Integer.parseInt(numSeatsTxt);
        int serialNum = Integer.parseInt(serialNumTxt);
        
     
        
        if (makeYear <= 1990 || makeYear >= 2022) {
            JOptionPane.showMessageDialog(this, "Make year looks incorrect.");
            return;
        }
        if (noOfSeats <= 4 || noOfSeats >= 10) {
            JOptionPane.showMessageDialog(this, "Seat number looks incorrect.");
            return;
        }
        
        
        
        
       updateRecords();
       JOptionPane.showMessageDialog(this, "Records Updated");
    }//GEN-LAST:event_btnUpdateDetailsActionPerformed

    private void ChcAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChcAvailableActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ChcAvailableActionPerformed

    private void txtLastUpdatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastUpdatedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastUpdatedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ChcAvailable;
    private javax.swing.JCheckBox ChcMaintainance;
    private javax.swing.JButton btnDeleteDetails;
    private javax.swing.JButton btnEditDetails;
    private javax.swing.JButton btnUpdateDetails;
    private javax.swing.JButton generateButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblMakeYear;
    private javax.swing.JLabel lblManufacturer;
    private javax.swing.JLabel lblModelNumber;
    private javax.swing.JLabel lblSeats;
    private javax.swing.JLabel lblSerialNumber;
    private javax.swing.JLabel lblType;
    private javax.swing.JTable tblCarList;
    private javax.swing.JTextField txtCarType;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtLastUpdated;
    private javax.swing.JTextField txtMakeYear;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtModelNo;
    private javax.swing.JTextField txtNoOfSeats;
    private javax.swing.JTextField txtSerialNumber;
    // End of variables declaration//GEN-END:variables

    private void populateRecords() {
          ArrayList<Car> cars = this.vehicleFleet.getFleetOfCars();
          populateRecords(cars);
     }
    
    private void populateRecords(ArrayList<Car> cars) {
        DefaultTableModel model = (DefaultTableModel) tblCarList.getModel();
        model.setRowCount(0);
        for (Car car : cars) {
            
            String mantenanceDateStr = Utility.dateToString(
                    car.getCarMaintainanceDate()
            );
            
            Object[] rowData = {
                car.getType(),
            
                    car.getManufacturer(),
                    car.getCity(),
                    car.getNoOfSeats(),
                    car.getMakeYear(),
                    car.getSerialNum(),
                    car.getModelNo(),
                    mantenanceDateStr,             
                    car.isAvailable()
               };
            model.addRow(rowData);
        }
    }
    
    
    public void updateRecords(){
      
        this.updateCar.setCity(txtCity.getText());
        this.updateCar.setNoOfSeats(Integer.parseInt(txtNoOfSeats.getText()));
        this.updateCar.setMakeYear(Integer.parseInt(txtMakeYear.getText()));
        this.updateCar.setManufacturer(txtManufacturer.getText());
        this.updateCar.setModelNo(txtModelNo.getText());
        this.updateCar.setSerialNum(Integer.parseInt(txtSerialNumber.getText()));
        this.updateCar.setType(txtCarType.getText());
//        this.updateCar.setCarMaintainanceDate(Integer.parseInt(ChcMaintainance.getText()));
        this.updateCar.setIsAvailable(ChcAvailable.isSelected());
        
        
        populateRecords();
        
        
     }
    
   
   public static boolean isNum(String input){
        try {
            Integer.parseInt(input);
        } catch(NumberFormatException e) {
            return false;
        }
        return true;
    }

    public void displayProfile (){

        txtCarType.setText(updateCar.getType());
        txtManufacturer.setText(updateCar.getManufacturer());
        txtCity.setText (updateCar.getCity());
        txtMakeYear.setText(updateCar.getCity());
        txtModelNo.setText(updateCar.getModelNo());
        txtSerialNumber.setText(String.valueOf(updateCar.getSerialNum()));
        txtNoOfSeats.setText(String.valueOf(updateCar.getNoOfSeats()));

        }
    
    


}
